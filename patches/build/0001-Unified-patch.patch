From 550377280656865e573a381890bb44e38e4f3775 Mon Sep 17 00:00:00 2001
From: streambinder <davidepucci@hiddenhost.org>
Date: Wed, 25 Jun 2014 21:20:13 +0200
Subject: [PATCH] Unified patch: [*]Switched to MMB squisher [*]Excluded
 useless warnings [*]Totally excluded official CM repos support [*]Created new
 tiny product makefile

---
 core/Makefile               |   2 +-
 envsetup.sh                 |   3 -
 target/product/core.mk      |   1 -
 target/product/tiny_aosp.mk |  92 +++++++++++++++++++++
 tools/roomservice.py        | 197 --------------------------------------------
 5 files changed, 93 insertions(+), 202 deletions(-)
 create mode 100644 target/product/tiny_aosp.mk
 delete mode 100755 tools/roomservice.py

diff --git a/core/Makefile b/core/Makefile
index cfcec33..6abc257 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -1298,7 +1298,7 @@ ifneq ($(TARGET_CUSTOM_RELEASETOOL),)
 	$(hide) $(TARGET_CUSTOM_RELEASETOOL)
 else
 	@echo "Running releasetool..."
-	$(hide) ./vendor/cm/tools/squisher
+	$(hide) OTAPACKAGE=$(INTERNAL_OTA_PACKAGE_TARGET) ./vendor/mmb/mmb-squisher
 endif
 
 # -----------------------------------------------------------------
diff --git a/envsetup.sh b/envsetup.sh
index 03063b2..6236465 100644
--- a/envsetup.sh
+++ b/envsetup.sh
@@ -529,11 +529,8 @@ function lunch()
         # if we can't find a product, try to grab it off the CM github
         T=$(gettop)
         pushd $T > /dev/null
-        build/tools/roomservice.py $product
         popd > /dev/null
         check_product $product
-    else
-        build/tools/roomservice.py $product true
     fi
     if [ $? -ne 0 ]
     then
diff --git a/target/product/core.mk b/target/product/core.mk
index ea5be3f..125d24e 100644
--- a/target/product/core.mk
+++ b/target/product/core.mk
@@ -28,7 +28,6 @@ PRODUCT_PACKAGES := \
     DownloadProvider \
     DownloadProviderUi \
     HTMLViewer \
-    Home \
     KeyChain \
     MediaProvider \
     PackageInstaller \
diff --git a/target/product/tiny_aosp.mk b/target/product/tiny_aosp.mk
new file mode 100644
index 0000000..7c310cd
--- /dev/null
+++ b/target/product/tiny_aosp.mk
@@ -0,0 +1,92 @@
+#
+# Copyright (C) 2007 The Android Open Source Project
+# Copyright (C) 2013 MoltenMotherBoard Team
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+# This is a generic phone product that isn't specialized for a specific device.
+# It includes the base Android platform.
+
+# It's eavily modded considered the 'full_base_telephony' as it's meant for tiny devices
+
+PRODUCT_POLICY := android.policy_phone
+
+PRODUCT_PACKAGES := \
+    AlarmProvider \
+    Bluetooth  \
+    Calculator \
+    Calendar \
+    CertInstaller \
+    DeskClock \
+    DrmProvider \
+    Email \
+    Exchange \
+    Gallery2 \
+    LatinIME \
+    Launcher2 \
+    LiveWallpapersPicker \
+    Mms \
+    Music \
+    Provision \
+    Phone \
+    QuickSearchBox \
+    Settings \
+    Sync \
+    SystemUI \
+    VoiceDialer \
+    CalendarProvider \
+    SyncProvider \
+    WAPPushManager \
+    bluetooth-health \
+    hostapd \
+    wpa_supplicant.conf \
+    drmserver \
+    libdrmframework \
+    libdrmframework_jni \
+    libfwdlockengine 
+
+PRODUCT_PACKAGES += \
+    icu.dat
+
+PRODUCT_PACKAGES += \
+    librs_jni \
+    libext2fs \
+    libext2_profile \
+    e2fsck
+
+PRODUCT_PACKAGES += \
+    audio.primary.default \
+    audio_policy.default
+
+PRODUCT_COPY_FILES :=  \
+        frameworks/base/media/libeffects/data/audio_effects.conf:system/etc/audio_effects.conf \
+        system/bluetooth/data/audio.conf:system/etc/bluetooth/audio.conf \
+        system/bluetooth/data/auto_pairing.conf:system/etc/bluetooth/auto_pairing.conf \
+        system/bluetooth/data/blacklist.conf:system/etc/bluetooth/blacklist.conf \
+        system/bluetooth/data/input.conf:system/etc/bluetooth/input.conf \
+        system/bluetooth/data/network.conf:system/etc/bluetooth/network.conf 
+
+$(call inherit-product, frameworks/base/data/sounds/AudioPackage5.mk)
+$(call inherit-product, $(SRC_TARGET_DIR)/product/locales_full.mk)
+$(call inherit-product-if-exists, frameworks/base/data/fonts/fonts.mk)
+$(call inherit-product-if-exists, external/lohit-fonts/fonts.mk)
+$(call inherit-product-if-exists, frameworks/base/data/keyboards/keyboards.mk)
+$(call inherit-product, $(SRC_TARGET_DIR)/product/core.mk)
+   
+PRODUCT_PROPERTY_OVERRIDES += \
+    ro.carrier=unknown
+
+PRODUCT_BRAND := generic
+PRODUCT_DEVICE := generic
+PRODUCT_NAME := generic
diff --git a/tools/roomservice.py b/tools/roomservice.py
deleted file mode 100755
index c5c9366..0000000
--- a/tools/roomservice.py
+++ /dev/null
@@ -1,197 +0,0 @@
-#!/usr/bin/env python
-import os
-import sys
-import urllib2
-import json
-import re
-import netrc, base64
-from xml.etree import ElementTree
-
-product = sys.argv[1];
-
-if len(sys.argv) > 2:
-    depsonly = sys.argv[2]
-else:
-    depsonly = None
-
-try:
-    device = product[product.index("_") + 1:]
-except:
-    device = product
-
-if not depsonly:
-    print "Device %s not found. Attempting to retrieve device repository from CyanogenMod Github (http://github.com/CyanogenMod)." % device
-
-repositories = []
-
-try:
-    authtuple = netrc.netrc().authenticators("api.github.com")
-
-    if authtuple:
-        githubauth = base64.encodestring('%s:%s' % (authtuple[0], authtuple[2])).replace('\n', '')
-    else:
-        githubauth = None
-except:
-    githubauth = None
-
-page = 1
-while not depsonly:
-    githubreq = urllib2.Request("https://api.github.com/users/CyanogenMod/repos?per_page=100&page=%d" % page)
-    if githubauth:
-        githubreq.add_header("Authorization","Basic %s" % githubauth)
-    result = json.loads(urllib2.urlopen(githubreq).read())
-    if len(result) == 0:
-        break
-    for res in result:
-        repositories.append(res)
-    page = page + 1
-
-local_manifests = r'.repo/local_manifests'
-if not os.path.exists(local_manifests): os.makedirs(local_manifests)
-
-def exists_in_tree(lm, repository):
-    for child in lm.getchildren():
-        if child.attrib['name'].endswith(repository):
-            return True
-    return False
-
-# in-place prettyprint formatter
-def indent(elem, level=0):
-    i = "\n" + level*"  "
-    if len(elem):
-        if not elem.text or not elem.text.strip():
-            elem.text = i + "  "
-        if not elem.tail or not elem.tail.strip():
-            elem.tail = i
-        for elem in elem:
-            indent(elem, level+1)
-        if not elem.tail or not elem.tail.strip():
-            elem.tail = i
-    else:
-        if level and (not elem.tail or not elem.tail.strip()):
-            elem.tail = i
-
-def get_from_manifest(devicename):
-    try:
-        lm = ElementTree.parse(".repo/local_manifests/roomservice.xml")
-        lm = lm.getroot()
-    except:
-        lm = ElementTree.Element("manifest")
-
-    for localpath in lm.findall("project"):
-        if re.search("android_device_.*_%s$" % device, localpath.get("name")):
-            return localpath.get("path")
-
-    # Devices originally from AOSP are in the main manifest...
-    try:
-        mm = ElementTree.parse(".repo/manifest.xml")
-        mm = mm.getroot()
-    except:
-        mm = ElementTree.Element("manifest")
-
-    for localpath in mm.findall("project"):
-        if re.search("android_device_.*_%s$" % device, localpath.get("name")):
-            return localpath.get("path")
-
-    return None
-
-def is_in_manifest(projectname):
-    try:
-        lm = ElementTree.parse(".repo/local_manifests/roomservice.xml")
-        lm = lm.getroot()
-    except:
-        lm = ElementTree.Element("manifest")
-
-    for localpath in lm.findall("project"):
-        if localpath.get("name") == projectname:
-            return 1
-
-    return None
-
-def add_to_manifest(repositories):
-    try:
-        lm = ElementTree.parse(".repo/local_manifests/roomservice.xml")
-        lm = lm.getroot()
-    except:
-        lm = ElementTree.Element("manifest")
-
-    for repository in repositories:
-        repo_name = repository['repository']
-        repo_target = repository['target_path']
-        if exists_in_tree(lm, repo_name):
-            print 'CyanogenMod/%s already exists' % (repo_name)
-            continue
-
-        print 'Adding dependency: CyanogenMod/%s -> %s' % (repo_name, repo_target)
-        project = ElementTree.Element("project", attrib = { "path": repo_target,
-            "remote": "github", "name": "CyanogenMod/%s" % repo_name, "revision": "ics" })
-
-        if 'branch' in repository:
-            project.set('revision',repository['branch'])
-
-        lm.append(project)
-
-    indent(lm, 0)
-    raw_xml = ElementTree.tostring(lm)
-    raw_xml = '<?xml version="1.0" encoding="UTF-8"?>\n' + raw_xml
-
-    f = open('.repo/local_manifests/roomservice.xml', 'w')
-    f.write(raw_xml)
-    f.close()
-
-def fetch_dependencies(repo_path):
-    print 'Looking for dependencies'
-    dependencies_path = repo_path + '/cm.dependencies'
-    syncable_repos = []
-
-    if os.path.exists(dependencies_path):
-        dependencies_file = open(dependencies_path, 'r')
-        dependencies = json.loads(dependencies_file.read())
-        fetch_list = []
-
-        for dependency in dependencies:
-            if not is_in_manifest("CyanogenMod/%s" % dependency['repository']):
-                fetch_list.append(dependency)
-                syncable_repos.append(dependency['target_path'])
-
-        dependencies_file.close()
-
-        if len(fetch_list) > 0:
-            print 'Adding dependencies to manifest'
-            add_to_manifest(fetch_list)
-    else:
-        print 'Dependencies file not found, bailing out.'
-
-    if len(syncable_repos) > 0:
-        print 'Syncing dependencies'
-        os.system('repo sync %s' % ' '.join(syncable_repos))
-
-if depsonly:
-    repo_path = get_from_manifest(device)
-    if repo_path:
-        fetch_dependencies(repo_path)
-    else:
-        print "Trying dependencies-only mode on a non-existing device tree?"
-
-    sys.exit()
-
-else:
-    for repository in repositories:
-        repo_name = repository['name']
-        if repo_name.startswith("android_device_") and repo_name.endswith("_" + device):
-            print "Found repository: %s" % repository['name']
-            manufacturer = repo_name.replace("android_device_", "").replace("_" + device, "")
-
-            repo_path = "device/%s/%s" % (manufacturer, device)
-
-            add_to_manifest([{'repository':repo_name,'target_path':repo_path}])
-
-            print "Syncing repository to retrieve project."
-            os.system('repo sync %s' % repo_path)
-            print "Repository synced!"
-
-            fetch_dependencies(repo_path)
-            print "Done"
-            sys.exit()
-
-print "Repository for %s not found in the CyanogenMod Github repository list. If this is in error, you may need to manually add it to your local_manifests/roomservice.xml." % device
-- 
1.8.3.2

